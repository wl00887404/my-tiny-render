(function(g,h){typeof exports=="object"&&typeof module<"u"?module.exports=h():typeof define=="function"&&define.amd?define(h):(g=typeof globalThis<"u"?globalThis:g||self,g.main=h())})(this,function(){"use strict";var wt=Object.defineProperty;var xt=(g,h,p)=>h in g?wt(g,h,{enumerable:!0,configurable:!0,writable:!0,value:p}):g[h]=p;var P=(g,h,p)=>(xt(g,typeof h!="symbol"?h+"":h,p),p);const g=t=>Array.from({length:t}),h=(t,o,e=0)=>g(t).map(()=>g(o).map(()=>e)),p=t=>[t.length,t[0].length],nt=(t,o)=>{const[e,n]=p(t),[s,c]=p(o);if(e!==s||n!==c)throw new Error(`M${e}x${n} can not add M${s}x${c}`);const a=h(e,n);for(let r=0;r<e;r++)for(let i=0;i<n;i++)a[r][i]=t[r][i]+o[r][i];return a},ct=(t,o)=>{const[e,n]=p(t),[s,c]=p(o);if(e!==s||n!==c)throw new Error(`M${e}x${n} can not subtract M${s}x${c}`);const a=h(e,n);for(let r=0;r<e;r++)for(let i=0;i<n;i++)a[r][i]=t[r][i]-o[r][i];return a},rt=(t,o)=>{const[e,n]=p(t),s=h(e,n);for(let c=0;c<e;c++)for(let a=0;a<n;a++)s[c][a]=t[c][a]*o;return s},U=(t,o)=>{const[e,n]=p(t),[s,c]=p(o);if(n!==s)throw new Error(`M${e}x${n} can not multiply M${s}x${c}`);const a=h(e,c);for(let r=0;r<e;r++)for(let i=0;i<c;i++)for(let f=0;f<n;f++)a[r][i]+=t[r][f]*o[f][i];return a},at=t=>{const[o,e]=p(t),n=h(e,o);for(let s=0;s<o;s++)for(let c=0;c<e;c++)n[c][s]=t[s][c];return n},x=(...t)=>{const o=t[t.length-1];return t.slice(0,t.length-1).reduceRight((e,n)=>U(n,e),o)},b={makeMatrix:h,size:p,add:nt,subtract:ct,scale:rt,multiply:U,transpose:at,compose:x},I=(t,o,e,n)=>{const s=[[t],[o],[e]];return n!==void 0&&s.push([n]),s},it=b.add,lt=b.subtract,V=t=>[t[0][0],t[1][0],t[2][0],t[3][0]],X=b.scale,Y=(t,o)=>{const[e,n,s]=V(t),[c,a,r]=V(o);return e*c+n*a+s*r},ht=(t,o)=>{const[e,n,s]=V(t),[c,a,r]=V(o);return I(n*r-s*a,s*c-e*r,e*a-n*c,1)},D=t=>Math.sqrt(Y(t,t)),ut=t=>{if(G(t))return X(t,1/D(t));const[o,e,n,s]=V(t);return I(o/s,e/s,n/s,1)},ft=t=>t[3][0]!==0,G=t=>t[3][0]===0,l={makeVector:I,normalize:ut,add:it,subtract:lt,get:V,scale:X,dot:Y,cross:ht,length:D,isPoint:ft,isVector:G},H=(t,o)=>{const e=document.createElement("canvas");return e.width=t,e.height=o,e},pt=(t,o,e)=>{o.forEach(n=>{t.beginPath();const s=n.points.map(a=>{const r=l.normalize(b.multiply(e,a));return l.get(r)}),c=s[s.length-1];t.moveTo(c[0],c[1]),s.forEach(a=>{t.lineTo(a[0],a[1])}),t.stroke()})},mt=(t,o,e,n,s)=>{const c=b.makeMatrix(n,s,-1/0);o.forEach(a=>{const r=a.points.map(i=>{const f=l.normalize(b.multiply(e,i));return l.get(f)});dt(t,r,a.color,c)})},dt=(t,o,e,n)=>{for(let s=0;s<o.length-2;s++)Mt(t,[o[0],o[s+1],o[s+2]],e,n)},Mt=(t,o,e,n)=>{let s=1/0,c=0,a=0,r=1/0;o.forEach(M=>{s=Math.min(s,M[1]),c=Math.max(c,M[0]),a=Math.max(a,M[1]),r=Math.min(r,M[0])}),s=Math.floor(s),c=Math.ceil(c),a=Math.ceil(a),r=Math.floor(r);const[i,f,m]=o,d=l.makeVector(i[0],i[1],0,1),w=l.makeVector(f[0],f[1],0,1),y=l.makeVector(m[0],m[1],0,1),k=l.cross(l.subtract(w,d),l.subtract(y,d)),u=l.length(k);for(let M=r;M<c;M++)for(let z=s;z<a;z++){const $=gt([M+.5,z+.5],d,w,y,u);if(!$)continue;const st=$[0]*o[0][2]+$[1]*o[1][2]+$[2]*o[2][2];if(n[M][z]>st)return;n[M][z]=st,t.fillStyle=e,t.fillRect(M,z,1,1)}},gt=(t,o,e,n,s)=>{let c=0;const a=l.makeVector(t[0],t[1],0,1),r=[e,n,o,e],i=[];for(let m=0;m<3;m++){const d=l.subtract(r[m+1],r[m]),w=l.subtract(a,r[m]),y=l.cross(d,w);i.push(y);const k=l.get(y)[2];c+=k/Math.abs(k)}if(c===3||c===-3)return i.map(m=>l.length(m)/s)},J=(t,o,e)=>[[1,0,0,t],[0,1,0,o],[0,0,1,e],[0,0,0,1]],T=t=>[[t,0,0,0],[0,t,0,0],[0,0,t,0],[0,0,0,1]],K=t=>[[1,0,0,0],[0,Math.cos(t),-Math.sin(t),0],[0,Math.sin(t),Math.cos(t),0],[0,0,0,1]],N=t=>[[Math.cos(t),0,Math.sin(t),0],[0,1,0,0],[-Math.sin(t),0,Math.cos(t),0],[0,0,0,1]],O=t=>[[Math.cos(t),-Math.sin(t),0,0],[Math.sin(t),Math.cos(t),0,0],[0,0,1,0],[0,0,0,1]],Q=[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]],W=(t,o)=>[[t,0,0,0],[0,t,0,0],[0,0,t-o,t*o],[0,0,1,0]],_=(t,o,e)=>{const n=t/(o*Math.tan(e)*2),s=T(n);return s[1][1]*=-1,s},tt=(t,o)=>[[1,0,0,t/2],[0,-1,0,o/2],[0,0,1,0],[0,0,0,1]],C=l.makeVector(0,0,Math.sqrt(3)*(2/3),1),R=l.makeVector(1,0,-Math.sqrt(3)/3,1),E=l.makeVector(-1,0,-Math.sqrt(3)/3,1),j=l.makeVector(0,Math.sqrt(8/3),0,1),yt=[{points:[C,R,E],color:"red"},{points:[C,R,j],color:"blue"},{points:[C,E,j],color:"green"},{points:[R,E,j],color:"yellow"}],q=l.makeVector(1,-1,1,1),v=l.makeVector(-1,-1,1,1),F=l.makeVector(-1,-1,-1,1),S=l.makeVector(1,-1,-1,1),A=l.makeVector(1,1,1,1),L=l.makeVector(-1,1,1,1),Z=l.makeVector(-1,1,-1,1),B=l.makeVector(1,1,-1,1),ot={tetrahedron:yt,cube:[{points:[q,v,F,S],color:"red"},{points:[A,L,Z,B],color:"red"},{points:[q,v,L,A],color:"blue"},{points:[S,F,Z,B],color:"blue"},{points:[q,S,B,A],color:"green"},{points:[v,F,Z,L],color:"green"}]};class kt{constructor(){P(this,"lastTimestamp");P(this,"callbacks",[]);P(this,"stopFlag",!1);P(this,"update",o=>{const e=this.lastTimestamp?o-this.lastTimestamp:0;this.callbacks.forEach(n=>n(e)),this.lastTimestamp=o,this.stopFlag||window.requestAnimationFrame(this.update)})}start(){this.stopFlag=!1,window.requestAnimationFrame(this.update)}stop(){this.stopFlag=!0}}const et=document.querySelector("#app");return{stroke:()=>{const s=Math.PI/3;let c=0,a=0,r=0;const i=.5,f=H(800,450),m=f.getContext("2d");et.append(f);const d={x:!1,y:!1,z:!1,shift:!1};window.onkeydown=k=>{const u=k.key.toLowerCase();u!=="x"&&u!=="y"&&u!=="z"&&u!="shift"||(d[u]=!0)},window.onkeyup=k=>{const u=k.key.toLowerCase();u!=="x"&&u!=="y"&&u!=="z"&&u!="shift"||(d[u]=!1)};const w=x(tt(800,450),_(450,-10,s),Q,W(-10,-50)),y=new kt;y.callbacks.push(k=>{const u=d.shift?-1:1;d.x&&(c+=i*(Math.PI/180)*u*k),d.y&&(a+=i*(Math.PI/180)*u*k),d.z&&(r+=i*(Math.PI/180)*u*k);const M=x(J(0,0,-20),O(r),N(a),K(c),T(8));m.clearRect(0,0,800,450),pt(m,ot.cube,x(w,M))}),y.start()},fill:()=>{const s=Math.PI/3;let c=0,a=0,r=0;const i=H(800,450),f=i.getContext("2d");et.append(i);const m=x(tt(800,450),_(450,-10,s),Q,W(-10,-50)),d=()=>{console.time("drawCall");const w=x(J(0,0,-20),O(r),N(a),K(c),T(8));f.clearRect(0,0,800,450),mt(f,ot.cube,x(m,w),800,450),console.timeEnd("drawCall")};d(),window.onkeydown=w=>{const y=w.key.toLowerCase();y==="x"&&(c+=30*(Math.PI/180)),y==="y"&&(a+=30*(Math.PI/180)),y==="z"&&(r+=30*(Math.PI/180)),d()}}}});
